use("KetCindyPlugin");
Dircdy=loaddirectory;
setdirectory(gethome());
import("ketcindy.ini");

funflg=0;
rowno=1;
varset=0;
varctr=0;
texflg=0;
cursor=-1;
cursorflg=0;
str1="";str2="";str3="";str4="";
stredit=[str1,str2,str3,str4];
vstr1="aa=";
vstr2="bb=";
vstr3="yy=";
vstr4="xx=";
varedit=[vstr1,vstr2,vstr3,vstr4];

//SL
//if(varctr==0,rowno=rowno+1);
//if(rowno==5,rowno=1);
//varctr=0;Resetvar();
//AC
//funflg=0;
//Resetvar();
//if(rowno==1,Text1.currenttext="");
//if(rowno==2,Text2.currenttext="");
//if(rowno==3,Text3.currenttext="");
//if(rowno==4,Text4.currenttext="");
//cursor=-1;
//SLv
//funflg=0;
//Resetvar();
//varctr=varctr+1;
//if(varctr==5,varctr=1);

Togreek(chr):=(
  regional(alph,Alph,grk,Grk,out,tmp);
  alph="abgdezhtiklmnxprstufcqov";
  grk=["alpha","beta","gamma","delta","epsilon","zeta",
       "eta","theta","iota","kappa","lambda","mu","nu",
       "xi","pi","rho","sigma","tau","upsilon",
       "phi","chi","psi","omega","varphi"];
  Alph="GDTLPSFQO";
  Grk=["Gamma","Delta","Theta","Lambda","Pi",
       "Sigma","Phi","Psi","Omega"];
  out=chr;
  if(length(chr)>0,
    tmp=indexof(alph,chr);
    if(tmp>0,
      out="{\"+grk_(tmp)+"}";
    ,
      tmp=indexof(Alph,chr);
      if(tmp>0,
        out="{\"+Grk_(tmp)+"}";
      );
    );
  );
  out;
);

Seteditable(1,["","Size=24","Width=600"]); //no ketjs on
Seteditable(2,["","Size=24","Width=600"]);
Seteditable(3,["","Size=24","Width=600"]);
Seteditable(4,["","Size=24","Width=600"]);
Seteditable(6,["aa=","Size=20","Width=120"]);
Seteditable(7,["bb=","Size=20","Width=120"]);
Seteditable(8,["yy=","Size=20","Width=120"]);
Seteditable(9,["xx=","Size=20","Width=120"]); //no ketjs off
str1="";
str2="";
str3="";
str4="";
vstr1="aa=";
vstr2="bb=";
vstr3="yy=";
vstr4="xx=";
//no ketjs off

RepL1=[
 ["hat","^"],["crs","\times"],["cross","\times"],
 ["&","+"],["--","+"],["::","="]
];
RepL2=[
 [" ^","^"],["(.","<"],[".)",">"],["(=","<="],["=)","=>"]
];
RepL3=[
 ["pi"," pi "],["^ ","^"],["<==>"," \Leftrightarrow "],
 ["==>"," \Rightarrow "],["<=="," \Leftarrow "],
 ["<="," \leq "],["=>"," \geq "],[">="," \geq "]
];

Addfun(name):=(
  regional(nameL,outL,out,tmp);
  out="";
  nameL=[
    "frac","fr(","power","sq","sq2",
    "sin","sin2","cos","cos2",
    "tan","tan2","log","neq",
    "ln","hat0","hat","under","plus","minus","lpar","rpar",
    "comma","greek","capital","equal","less","great","prime",
    "space","sp\;","pi","period","center","ast","slash","semi",
    "circ","n0","n1","n2","n3","n4","n5","n6","n7","n8","n9",
    "La","Lb","Lc","Ld","Le","Lf","Lg","Lh","Li","Lj","Lk",
    "Ll","Lm","Ln","Lo","Lp","Lq","Lr","Ls","Lt","Lu","Lv",
    "Lw","Lx","Ly","Lz","backs","bral","brar","colon",
    "atmark","excl","pipe","cross","bracel","bracer","delta",
    "lim","inti","intd","vec","vec0","sum",
    "bold","mat","det","overline"
  ];
  outL=[
    "{fr(aa,bb)}","fr(","(aa)^(bb)","{sq(aa)}","{sq(bb,aa)}",
    "{sin((aa))}","{sin(bb,(aa))}","{cos((aa))}","{cos(bb,(aa))}",
    "{tan((aa))}","{tan(bb,(aa))}","{log(bb,(aa))}","{Ne}",
    "{log((aa))}","^","^(","_(","+","-","(",")",
    ",","{G}","{C}","=","<",">","'",
    " ","\;","{pi}",".","{Dot}","* ","/",";",
    "{Cir}","0","1","2","3","4","5","6","7","8","9",
    "a","b","c","d","e","f","g","h","i","j","k",
    "l","m","n","o","p","q","r","s","t","u","v",
    "w","x","y","z","\","[","]",":",
    "@","!","|","{Crs}","{","}","delta(aa)",
    "{lim(aa,bb,yy)}","{int(yy,xx)}","{int(aa,bb,yy,xx)}",
    "{vec(aa)}","{vec0(aa)}","{sum(aa,bb,yy)}",
    "{B}","mat(","det(","{over(aa)}"
  ];
  tmp=select(1..(length(nameL)),nameL_#==name);
  if(length(tmp)>0,
    tmp=tmp_1;
    out=outL_tmp;
  ,
    out=""
  );
  out;
);

Noascii(str):=(
  regional(ascii,out,tmp,tmp1);
  ascii=apply(32..126,unicode(text(#),base->10));
  out="";
  forall(1..(length(str)),
    tmp=Op(#,str);
    if(!contains(ascii,tmp),
      out=out+tmp;
    );
  );
  out;
);

tmp1=32..126;
tmp=(65..90)++(97..122);
tmp1=remove(tmp1,tmp);
alpha=apply(tmp,unicode(text(#),base->10));
tmp=[46]++(48..57);
tmp1=remove(tmp1,tmp);
numer=apply(tmp,unicode(text(#),base->10));

Charstyle(str):=(
  regional(ctr,tmp,tmp1,tmp2,tmp3,out);
  out=str;
  tmp=indexof(out,"{C}");
  ctr=0;
  while((tmp>0)&(ctr<20),
    tmp3=substring(out,tmp+2,tmp+3);
    tmp3=Toupper(tmp3);
    tmp3=substring(out,0,tmp-1)+tmp3;
    out=tmp3+substring(out,tmp+3,length(out));
    tmp=indexof(out,"{C}");
    ctr=ctr+1;
  );
  tmp=indexof(out,"{G}");
  ctr=0;
  while((tmp>0)&(ctr<20),
    tmp3=substring(out,tmp+2,tmp+3);
    tmp3=Togreek(tmp3);
    tmp3=substring(out,0,tmp-1)+tmp3;
    out=tmp3+substring(out,tmp+3,length(out));
    tmp=indexof(out,"{G}");
    ctr=ctr+1;
  );
  tmp=indexof(out,"{B}");
  ctr=0;
  while((tmp>0)&(ctr<20),
    tmp3=substring(out,tmp+2,tmp+3);
    tmp3="\mathbf{"+tmp3+"}";
    tmp3=substring(out,0,tmp-1)+tmp3;
    out=tmp3+substring(out,tmp+3,length(out));
    tmp=indexof(out,"{B}");
    ctr=ctr+1;
  );
  out;
);

Sla2fra(str):=(
  regional(out,rest,ctr,sla,par,nstr,dstr,
    tmp,tmp1,tmp2,tmp3,tmp4);
  rest=str;
  out="";
  sla=indexof(rest,"/");
  ctr=0;
  while((sla>0)&(ctr<20),
   if(rest_(sla+1)=="/",
     out=out+substring(rest,0,sla+1);
     rest=substring(rest,sla+1,length(rest));
   ,
     par1=Bracket(rest,"()");
     par2=Bracket(rest,"{}");
     tmp1=sla-1;
     tmp=rest_(tmp1);
     if((tmp==")")%(tmp=="}"),
       if(tmp==")",par=par1,par=par2);
       tmp=select(par,#_1==tmp1);
       tmp=tmp_1_2;
       tmp2=select(par,(#_1<tmp1)&(#_2==-tmp));
       tmp2=tmp2_(-1)_1;
       nstr=substring(rest,tmp2,tmp1-1);
       tmp2=tmp2-1;
     ,
       if(contains(numer,rest_(tmp1)),
         tmp2=select(1..(tmp1),!contains(numer,rest_#));
         if(length(tmp2)>0,tmp2=tmp2_(-1),tmp2=0);
         nstr=substring(rest,tmp2,tmp1);
       ,
         nstr=rest_(tmp1);
         tmp2=tmp1-1;
       );
     );
     tmp3=sla+1;
     tmp=rest_(tmp3);
     if((tmp=="(")%(tmp=="{"),
       if(tmp=="(",par=par1,par=par2);
       tmp=select(par,#_1==tmp3);
       tmp=tmp_1_2;
       tmp4=select(par,(#_1>tmp3)&(#_2==-tmp));
       tmp4=tmp4_1_1;
       dstr=substring(rest,tmp3,tmp4-1);
     ,
       if(contains(numer,rest_(tmp3)),
         tmp4=select((tmp3)..(length(rest)),
           !contains(numer,rest_#));
         if(length(tmp4)>0,tmp4=tmp4_1-1,tmp4=length(rest));
         dstr=substring(rest,tmp3-1,tmp4);
       ,
         tmp4=tmp3;
         dstr=rest_(tmp4);
       );
     );
   );
   out=out+substring(rest,0,tmp2)+"fr("+nstr+","+dstr+")";
   rest=substring(rest,tmp4,length(rest));
   sla=indexof(rest,"/");
   ctr=ctr+1;
  );
  out=out+rest;
  out;
);

Addat(str):=(
  regional(ascii,out,flg,tmp);
  ascii=apply(32..126,unicode(text(#),base->10));
  ascii=remove(ascii,["@"]);
  out="";
  flg=0;
  forall(1..(length(str)),
    tmp=str_#;
    if(tmp=="@",
      flg=1-flg
    ,
      if(!contains(ascii,tmp),
        if(flg==0,
          tmp="@"+tmp+"@";
        );
      );
    );
    out=out+tmp;
  );
  out=replace(out,"@@","");
  out;
);

Sepchar(strorg):=(
  regional(str,out,flg,err,tmp,tmp1,tmp2);
  str=Addat(strorg);
  err="";
  out=[];
  tmp1=Indexall(str,"@");
  tmp=length(tmp1);
  if((length(str)==0)%(tmp==0)%(mod(tmp,2)==1),
    if((length(str)==0)%(tmp==0),
      if(length(str)==0,out=[],out=[str]);
    ,
      err="@の数";
    );
  ,
    tmp=tmp1_1;
    if(tmp>1,
      out=[substring(str,0,tmp-1)];
    );
    start=tmp;
    flg=1;
    forall(2..(length(tmp1)),
      if(flg==1,
        tmp2=substring(str,start-1,tmp1_#-1);
      ,
        tmp2=substring(str,start,tmp1_#-1);
      );
      out=append(out,tmp2);
      start=tmp1_#;
      flg=1-flg;
    );
    if(start<length(str),
      tmp2=substring(str,start,length(str));
      out=append(out,tmp2);
    );
  );
  [out,err];
);

Extractvar(strorg):=Extractvar(strorg,",");
Extractvar(strorg,mark):=(
  regional(out,parL,str,cma,nc,first,last,
     tmp,tmp1,tmp2);
  str=strorg;
  out=[];
  first=0; last=0;
  parL=Bracket(str,"()");
  tmp1=select(parL,#_2==1);
  tmp2=select(parL,#_2==-1);
  if(length(tmp1)*length(tmp2)>0,
    first=tmp1_1_1;
    last=tmp2_1_1;
    str=substring(str,0,last);
    cma=Indexall(str,mark);
    parL=select(parL,#_1<=last);
    if(length(cma)==0,
      out=[substring(str,first,last-1)];
    ,
      tmp1=first;
      forall(1..(length(cma)),nc,
        tmp=select(parL,#_1<cma_nc);
        tmp=tmp_(-1)_2;
        if(tmp>0,tmp=tmp,tmp=-tmp-1);
        if(tmp==1,
          tmp2=cma_(nc)-1;
          out=append(out,substring(str,tmp1,tmp2));
          tmp1=tmp2+1;
          if(nc==length(cma),
            out=append(out,substring(str,tmp1,length(str)-1));
          );
        );
      );
    );
  );
  [first,last,out];
);

Moretotex(str):=(
  regional(out,rest,symL,sym,np,tmp,tmp1,tmp2,tmp3,ctr);
  out=str;
  symL=[
    ["dt","\cdot"],["Dot","\cdot"],["Cir","\circ"],
    ["Crs","\times"],["Ne","=\!\!\!\!\! /\;\,"]
  ];
  forall(1..(length(symL)),
    tmp=symL_#;
    out=replace(out,tmp_1,tmp_2);
  );
  symL=[
    "_(","^(","delta(","int(","lim(",
    "vec(","vec0(","sum(",
    "mat(","det(","over(",
  ];
  forall(symL,sym,
    rest=out;
    out="";
    tmp=indexof(rest,sym);
    ctr=0;
    while((tmp>0)&(ctr<20),
      tmp1=substring(rest,0,tmp-1);
      tmp2=substring(rest,tmp-1,length(rest));
      tmp3=Extractvar(tmp2);
      rest=substring(tmp2,tmp3_2,length(rest));
      tmp3=tmp3_3;
      if(sym=="_(",
        tmp="_{"+tmp3_1+"}";
      );
      if(sym=="^(",
        tmp="^{"+tmp3_1+"}";
      );
      if(sym=="delta(",
        tmp="{\Delta "+tmp3_1+"}";
      );
      if(sym=="vec(",
        tmp="\!\!\!\!\!\!\vec{\;\;\;\;"+tmp3_1+"}";
      );
      if(sym=="vec0(",
        tmp="\vec{"+tmp3_1+"}";
      );
      if(sym=="lim(",
        tmp="\displaystyle\lim_{"+tmp3_1+" \to ";
        tmp=tmp+tmp3_2+"}("+tmp3_3+")";
      );
      if(sym=="int(",
        tmp="\int";
        if(length(tmp3)==4,
          tmp=tmp+"_{"+tmp3_1+"}^{"+tmp3_2+"}";
        );
        tmp=tmp+"("+tmp3_(length(tmp3)-1)+")\,";
        tmp3=tmp3_(length(tmp3));
        if(substring(tmp3,0,1)!="d",tmp3="d"+tmp3);
        tmp=tmp+tmp3;
      );
      if(sym=="sum(",
        tmp="\sum_{"+tmp3_1+"}^{";
        tmp=tmp+tmp3_2+"}("+tmp3_3+")";
      );
      if(sym=="mat(",
        tmp2=replace(tmp3_1,"\;","bssc");
        tmp2=Indexall(tmp2,";");
        tmp="";
        repeat(length(tmp2)+1,tmp=tmp+"c");
        tmp="\left(\begin{array}{"+tmp+"}";
        forall(1..(length(tmp3)),
          tmp2=replace(tmp3_#,"\;","bssc");
          tmp2=replace(tmp2,";","&");
          tmp2=replace(tmp2,"bssc","\;");
          if(#<length(tmp3),tmp2=tmp2+"\\");
          tmp=tmp+tmp2;
        );
        tmp=tmp+"\end{array}\right)";
      );
      if(sym=="det(",
        tmp2=replace(tmp3_1,"\;","bssc");
        tmp2=Indexall(tmp2,";");
        tmp="";
        repeat(length(tmp3),tmp=tmp+"c");
        tmp="\left|\begin{array}{"+tmp+"}";
        forall(1..(length(tmp3)),
          tmp2=replace(tmp3_#,"\;","bssc");
          tmp2=replace(tmp2,";","&");
          tmp2=replace(tmp2,"bssc","\;");
          if(#<length(tmp3),tmp2=tmp2+"\\");
          tmp=tmp+tmp2;
        );
        tmp=tmp+"\end{array}\right|";
      );
      if(sym=="over(",
        tmp="\overline{"+tmp3_1+"}";
      );
      out=out+tmp1+tmp;
      tmp=indexof(rest,sym);
      ctr=ctr+1;
    );
    out=out+rest;
  );
  out;
);

Setvar(str):=(
  regional(out,tmp,tmp1,tmp2,tmp3,tmp4);
  out=str;
  forall(1..(length(varedit)),
    if(length(varedit_#)>0,
      tmp=Strsplit(varedit_#,"=");
      tmp1=tmp_1;
      tmp2=tmp_2;
      if(length(tmp2)>0,
        if(rowno==1,
          tmp3=out;
          tmp=indexof(tmp3,tmp1);
          if(tmp>0,
            tmp4=substring(tmp3,0,tmp-1);
            tmp4=tmp4+tmp2;
            out=tmp4+substring(tmp3,tmp+1,length(tmp3));
            strcsr=out;
            stredit_1=out;
//            Text1.currenttext=stredit_1;//only ketjs
          );
        );
        if(rowno==2,
          tmp3=out;
          tmp=indexof(tmp3,tmp1);
          if(tmp>0,
            tmp4=substring(tmp3,0,tmp-1);
            tmp4=tmp4+tmp2;
            out=tmp4+substring(tmp3,tmp+1,length(tmp3));
            strcsr=out;
            stredit_2=out;
//            Text2.currenttext=stredit_2;//only ketjs
          );
        );
        if(rowno==3,
          tmp3=out;
          tmp=indexof(tmp3,tmp1);
          if(tmp>0,
            tmp4=substring(tmp3,0,tmp-1);
            tmp4=tmp4+tmp2;
            out=tmp4+substring(tmp3,tmp+1,length(tmp3));
            strcsr=out;
            stredit_3=out;
//            Text3.currenttext=stredit_3;//only ketjs
          );
        );
        if(rowno==4,
          tmp3=out;
          tmp=indexof(tmp3,tmp1);
          if(tmp>0,
            tmp4=substring(tmp3,0,tmp-1);
            tmp4=tmp4+tmp2;
            out=tmp4+substring(tmp3,tmp+1,length(tmp3));
            strcsr=out;
            stredit_4=out;
//            Text4.currenttext=stredit_4;//only ketjs
          );
        );
      );
    );
  );
  out;
);

Resetvar():=(
  regional(vstr1,vstr2,vstr3,vstr4);
  vstr1="aa=";
  vstr2="bb=";
  vstr3="yy=";
  vstr4="xx=";
  varedit=[vstr1,vstr2,vstr3,vst4];
//  Text6.currenttext=vstr1;//only ketjs on
//  Text7.currenttext=vstr2;
//  Text8.currenttext=vstr3;
//  Text9.currenttext=vstr4;//only ketjs off
);

Removebb(str):=(
  regional(ctr,out,tmp,tmp1,tmp2,tmp3);
  out=str;
  res="";
  tmp=indexof(out,")^(bb)");
  ctr=1;
  while((tmp>0)&(ctr<=10),
    tmp3=Bracket(out,"()");
    tmp1=select(tmp3,#_1==tmp);
    tmp1=tmp1_1;
    tmp2=select(tmp3,((#_1)<tmp1_1)&(#_2==-tmp1_2));
    tmp2=tmp2_(-1)_1;
    tmp1=tmp1_1;
    tmp=substring(out,0,tmp2-1);
    tmp=tmp+substring(out,tmp2,tmp1-1);
    out=tmp+substring(out,tmp1+5,length(out));
    tmp=indexof(out,")^(bb)");
    ctr=ctr+1;
  );
  out;
);

Delete():=(
  regional(tmp,tmp1,tmp2);
  if(varctr==0,
    tmp=stredit_(rowno);
    if(length(tmp)>0,
      if((cursor==-1)%(cursorflg==0),
        tmp=substring(tmp,0,length(tmp)-1);
        stredit_(rowno)=tmp;
        cursor=length(tmp);
      ,
        tmp1=substring(tmp,0,cursor-1);
        tmp2=substring(tmp,cursor,length(tmp));
        tmp=tmp1+tmp2;
        cursor=cursor-1;
      );
    );
//    if(rowno==1,Text1.currenttext=tmp);//only ketjs on
//    if(rowno==2,Text2.currenttext=tmp);
//    if(rowno==3,Text3.currenttext=tmp);
//    if(rowno==4,Text4.currenttext=tmp);//only ketjs off
  ,
    tmp=varedit_(varctr);
    tmp=substring(tmp,0,length(tmp)-1);
//    if(varctr==1,Text6.currenttext=tmp);//only ketjs on
//    if(varctr==2,Text7.currenttext=tmp);
//    if(varctr==3,Text8.currenttext=tmp);
//    if(varctr==4,Text9.currenttext=tmp);//only ketjs off
  );
);

Copy():=(
  if(rowno==1,clpbd=Text1.currenttext);
  if(rowno==2,clpbd=Text2.currenttext);
  if(rowno==3,clpbd=Text3.currenttext);
  if(rowno==4,clpbd=Text4.currenttext);
);

Paste():=(
  regional(tmp);
  if(rowno==1,tmp=Text1.currenttext);
  if(rowno==2,tmp=Text2.currenttext);
  if(rowno==3,tmp=Text3.currenttext);
  if(rowno==4,tmp=Text4.currenttext);
  if(cursor==-1,cursor=length(tmp));
  tmp1=substring(tmp,0,cursor);
  tmp2=substring(tmp,cursor,length(tmp));
  strcsr=tmp1+clpbd+tmp2;
  cursor=cursor+length(clpbd);
  if(rowno==1,Text1.currenttext=strcsr);
  if(rowno==2,Text2.currenttext=strcsr);
  if(rowno==3,Text3.currenttext=strcsr);
  if(rowno==4,Text4.currenttext=strcsr);
  pasteflg=0;
);

use("KetCindyPlugin");
Dircdy=loaddirectory;
setdirectory(gethome());
import("ketcindy.ini");

funflg=0;
rowno=1;
varset=0;
varctr=0;
texflg=0;
cursor=-1;
cursorflg=0;
str1="";str2="";str3="";str4="";
stredit=[str1,str2,str3,str4];
vstr1="aa=";
vstr2="bb=";
vstr3="yy=";
vstr4="xx=";
varedit=[vstr1,vstr2,vstr3,vstr4];

//SL
//if(varctr==0,rowno=rowno+1);
//if(rowno==5,rowno=1);
//varctr=0;Resetvar();
//AC
//funflg=0;
//Resetvar();
//if(rowno==1,Text1.currenttext="");
//if(rowno==2,Text2.currenttext="");
//if(rowno==3,Text3.currenttext="");
//if(rowno==4,Text4.currenttext="");
//cursor=-1;
//SLv
//funflg=0;
//Resetvar();
//varctr=varctr+1;
//if(varctr==5,varctr=1);

Togreek(chr):=(
  regional(alph,Alph,grk,Grk,out,tmp);
  alph="abgdezhtiklmnxprstufcqov";
  grk=["alpha","beta","gamma","delta","epsilon","zeta",
       "eta","theta","iota","kappa","lambda","mu","nu",
       "xi","pi","rho","sigma","tau","upsilon",
       "phi","chi","psi","omega","varphi"];
  Alph="GDTLPSFQO";
  Grk=["Gamma","Delta","Theta","Lambda","Pi",
       "Sigma","Phi","Psi","Omega"];
  out=chr;
  if(length(chr)>0,
    tmp=indexof(alph,chr);
    if(tmp>0,
      out="{\"+grk_(tmp)+"}";
    ,
      tmp=indexof(Alph,chr);
      if(tmp>0,
        out="{\"+Grk_(tmp)+"}";
      );
    );
  );
  out;
);

Seteditable(1,["","Size=24","Width=600"]); //no ketjs on
Seteditable(2,["","Size=24","Width=600"]);
Seteditable(3,["","Size=24","Width=600"]);
Seteditable(4,["","Size=24","Width=600"]);
Seteditable(6,["aa=","Size=20","Width=120"]);
Seteditable(7,["bb=","Size=20","Width=120"]);
Seteditable(8,["yy=","Size=20","Width=120"]);
Seteditable(9,["xx=","Size=20","Width=120"]); //no ketjs off
str1="";
str2="";
str3="";
str4="";
vstr1="aa=";
vstr2="bb=";
vstr3="yy=";
vstr4="xx=";
//no ketjs off

RepL1=[
 ["hat","^"],["crs","\times"],["cross","\times"],
 ["&","+"],["--","+"],["::","="]
];
RepL2=[
 [" ^","^"],["(.","<"],[".)",">"],["(=","<="],["=)","=>"]
];
RepL3=[
 ["pi"," pi "],["^ ","^"],["<==>"," \Leftrightarrow "],
 ["==>"," \Rightarrow "],["<=="," \Leftarrow "],
 ["<="," \leq "],["=>"," \geq "],[">="," \geq "]
];

Addfun(name):=(
  regional(nameL,outL,out,tmp);
  out="";
  nameL=[
    "frac","fr(","power","sq","sq2",
    "sin","sin2","cos","cos2",
    "tan","tan2","log","neq",
    "ln","hat0","hat","under","plus","minus","lpar","rpar",
    "comma","greek","capital","equal","less","great","prime",
    "space","sp\;","pi","period","center","ast","slash","semi",
    "circ","n0","n1","n2","n3","n4","n5","n6","n7","n8","n9",
    "La","Lb","Lc","Ld","Le","Lf","Lg","Lh","Li","Lj","Lk",
    "Ll","Lm","Ln","Lo","Lp","Lq","Lr","Ls","Lt","Lu","Lv",
    "Lw","Lx","Ly","Lz","backs","bral","brar","colon",
    "atmark","excl","pipe","cross","bracel","bracer","delta",
    "lim","inti","intd","vec","vec0","sum",
    "bold","mat","det","overline"
  ];
  outL=[
    "{fr(aa,bb)}","fr(","(aa)^(bb)","{sq(aa)}","{sq(bb,aa)}",
    "{sin((aa))}","{sin(bb,(aa))}","{cos((aa))}","{cos(bb,(aa))}",
    "{tan((aa))}","{tan(bb,(aa))}","{log(bb,(aa))}","{Ne}",
    "{log((aa))}","^","^(","_(","+","-","(",")",
    ",","{G}","{C}","=","<",">","'",
    " ","\;","{pi}",".","{Dot}","* ","/",";",
    "{Cir}","0","1","2","3","4","5","6","7","8","9",
    "a","b","c","d","e","f","g","h","i","j","k",
    "l","m","n","o","p","q","r","s","t","u","v",
    "w","x","y","z","\","[","]",":",
    "@","!","|","{Crs}","{","}","delta(aa)",
    "{lim(aa,bb,yy)}","{int(yy,xx)}","{int(aa,bb,yy,xx)}",
    "{vec(aa)}","{vec0(aa)}","{sum(aa,bb,yy)}",
    "{B}","mat(","det(","{over(aa)}"
  ];
  tmp=select(1..(length(nameL)),nameL_#==name);
  if(length(tmp)>0,
    tmp=tmp_1;
    out=outL_tmp;
  ,
    out=""
  );
  out;
);

Noascii(str):=(
  regional(ascii,out,tmp,tmp1);
  ascii=apply(32..126,unicode(text(#),base->10));
  out="";
  forall(1..(length(str)),
    tmp=Op(#,str);
    if(!contains(ascii,tmp),
      out=out+tmp;
    );
  );
  out;
);

tmp1=32..126;
tmp=(65..90)++(97..122);
tmp1=remove(tmp1,tmp);
alpha=apply(tmp,unicode(text(#),base->10));
tmp=[46]++(48..57);
tmp1=remove(tmp1,tmp);
numer=apply(tmp,unicode(text(#),base->10));

Charstyle(str):=(
  regional(ctr,tmp,tmp1,tmp2,tmp3,out);
  out=str;
  tmp=indexof(out,"{C}");
  ctr=0;
  while((tmp>0)&(ctr<20),
    tmp3=substring(out,tmp+2,tmp+3);
    tmp3=Toupper(tmp3);
    tmp3=substring(out,0,tmp-1)+tmp3;
    out=tmp3+substring(out,tmp+3,length(out));
    tmp=indexof(out,"{C}");
    ctr=ctr+1;
  );
  tmp=indexof(out,"{G}");
  ctr=0;
  while((tmp>0)&(ctr<20),
    tmp3=substring(out,tmp+2,tmp+3);
    tmp3=Togreek(tmp3);
    tmp3=substring(out,0,tmp-1)+tmp3;
    out=tmp3+substring(out,tmp+3,length(out));
    tmp=indexof(out,"{G}");
    ctr=ctr+1;
  );
  tmp=indexof(out,"{B}");
  ctr=0;
  while((tmp>0)&(ctr<20),
    tmp3=substring(out,tmp+2,tmp+3);
    tmp3="\mathbf{"+tmp3+"}";
    tmp3=substring(out,0,tmp-1)+tmp3;
    out=tmp3+substring(out,tmp+3,length(out));
    tmp=indexof(out,"{B}");
    ctr=ctr+1;
  );
  out;
);

Sla2fra(str):=(
  regional(out,rest,ctr,sla,par,nstr,dstr,
    tmp,tmp1,tmp2,tmp3,tmp4);
  rest=str;
  out="";
  sla=indexof(rest,"/");
  ctr=0;
  while((sla>0)&(ctr<20),
   if(rest_(sla+1)=="/",
     out=out+substring(rest,0,sla+1);
     rest=substring(rest,sla+1,length(rest));
   ,
     par1=Bracket(rest,"()");
     par2=Bracket(rest,"{}");
     tmp1=sla-1;
     tmp=rest_(tmp1);
     if((tmp==")")%(tmp=="}"),
       if(tmp==")",par=par1,par=par2);
       tmp=select(par,#_1==tmp1);
       tmp=tmp_1_2;
       tmp2=select(par,(#_1<tmp1)&(#_2==-tmp));
       tmp2=tmp2_(-1)_1;
       nstr=substring(rest,tmp2,tmp1-1);
       tmp2=tmp2-1;
     ,
       if(contains(numer,rest_(tmp1)),
         tmp2=select(1..(tmp1),!contains(numer,rest_#));
         if(length(tmp2)>0,tmp2=tmp2_(-1),tmp2=0);
         nstr=substring(rest,tmp2,tmp1);
       ,
         nstr=rest_(tmp1);
         tmp2=tmp1-1;
       );
     );
     tmp3=sla+1;
     tmp=rest_(tmp3);
     if((tmp=="(")%(tmp=="{"),
       if(tmp=="(",par=par1,par=par2);
       tmp=select(par,#_1==tmp3);
       tmp=tmp_1_2;
       tmp4=select(par,(#_1>tmp3)&(#_2==-tmp));
       tmp4=tmp4_1_1;
       dstr=substring(rest,tmp3,tmp4-1);
     ,
       if(contains(numer,rest_(tmp3)),
         tmp4=select((tmp3)..(length(rest)),
           !contains(numer,rest_#));
         if(length(tmp4)>0,tmp4=tmp4_1-1,tmp4=length(rest));
         dstr=substring(rest,tmp3-1,tmp4);
       ,
         tmp4=tmp3;
         dstr=rest_(tmp4);
       );
     );
   );
   out=out+substring(rest,0,tmp2)+"fr("+nstr+","+dstr+")";
   rest=substring(rest,tmp4,length(rest));
   sla=indexof(rest,"/");
   ctr=ctr+1;
  );
  out=out+rest;
  out;
);

Addat(str):=(
  regional(ascii,out,flg,tmp);
  ascii=apply(32..126,unicode(text(#),base->10));
  ascii=remove(ascii,["@"]);
  out="";
  flg=0;
  forall(1..(length(str)),
    tmp=str_#;
    if(tmp=="@",
      flg=1-flg
    ,
      if(!contains(ascii,tmp),
        if(flg==0,
          tmp="@"+tmp+"@";
        );
      );
    );
    out=out+tmp;
  );
  out=replace(out,"@@","");
  out;
);

Sepchar(strorg):=(
  regional(str,out,flg,err,tmp,tmp1,tmp2);
  str=Addat(strorg);
  err="";
  out=[];
  tmp1=Indexall(str,"@");
  tmp=length(tmp1);
  if((length(str)==0)%(tmp==0)%(mod(tmp,2)==1),
    if((length(str)==0)%(tmp==0),
      if(length(str)==0,out=[],out=[str]);
    ,
      err="@の数";
    );
  ,
    tmp=tmp1_1;
    if(tmp>1,
      out=[substring(str,0,tmp-1)];
    );
    start=tmp;
    flg=1;
    forall(2..(length(tmp1)),
      if(flg==1,
        tmp2=substring(str,start-1,tmp1_#-1);
      ,
        tmp2=substring(str,start,tmp1_#-1);
      );
      out=append(out,tmp2);
      start=tmp1_#;
      flg=1-flg;
    );
    if(start<length(str),
      tmp2=substring(str,start,length(str));
      out=append(out,tmp2);
    );
  );
  [out,err];
);

Extractvar(strorg):=Extractvar(strorg,",");
Extractvar(strorg,mark):=(
  regional(out,parL,str,cma,nc,first,last,
     tmp,tmp1,tmp2);
  str=strorg;
  out=[];
  first=0; last=0;
  parL=Bracket(str,"()");
  tmp1=select(parL,#_2==1);
  tmp2=select(parL,#_2==-1);
  if(length(tmp1)*length(tmp2)>0,
    first=tmp1_1_1;
    last=tmp2_1_1;
    str=substring(str,0,last);
    cma=Indexall(str,mark);
    parL=select(parL,#_1<=last);
    if(length(cma)==0,
      out=[substring(str,first,last-1)];
    ,
      tmp1=first;
      forall(1..(length(cma)),nc,
        tmp=select(parL,#_1<cma_nc);
        tmp=tmp_(-1)_2;
        if(tmp>0,tmp=tmp,tmp=-tmp-1);
        if(tmp==1,
          tmp2=cma_(nc)-1;
          out=append(out,substring(str,tmp1,tmp2));
          tmp1=tmp2+1;
          if(nc==length(cma),
            out=append(out,substring(str,tmp1,length(str)-1));
          );
        );
      );
    );
  );
  [first,last,out];
);

Moretotex(str):=(
  regional(out,rest,symL,sym,np,eL,nc,
      tmp,tmp1,tmp2,tmp3,ctr);
  out=str;
  symL=[
    ["dt","\cdot"],["Dot","\cdot"],["Cir","\circ"],
    ["Crs","\times"],["Ne","=\!\!\!\!\! /\;\,"]
  ];
  forall(1..(length(symL)),
    tmp=symL_#;
    out=replace(out,tmp_1,tmp_2);
  );
  symL=[
    "_(","^(","delta(","int(","lim(",
    "vec(","vec0(","over(","sum("
  ];
  forall(symL,sym,
    rest=out;
    out="";
    tmp=indexof(rest,sym);
    ctr=0;
    while((tmp>0)&(ctr<20),
      tmp1=substring(rest,0,tmp-1);
      tmp2=substring(rest,tmp-1,length(rest));
      eL=Extractvar(tmp2);
      rest=substring(tmp2,eL_2,length(rest));
      tmp3=eL_3;
      if(sym=="_(",
        tmp="_{"+tmp3_1+"}";
      );
      if(sym=="^(",
        tmp="^{"+tmp3_1+"}";
      );
      if(sym=="delta(",
        tmp="{\Delta "+tmp3_1+"}";
      );
      if(sym=="vec(",
        tmp="\!\!\!\!\!\!\vec{\;\;\;\;"+tmp3_1+"}";
      );
      if(sym=="vec0(",
        tmp="\vec{"+tmp3_1+"}";
      );
      if(sym=="lim(",
        tmp="\displaystyle\lim_{"+tmp3_1+" \to ";
        tmp=tmp+tmp3_2+"}("+tmp3_3+")";
      );
      if(sym=="int(",
        tmp="\int";
        if(length(tmp3)==4,
          tmp=tmp+"_{"+tmp3_1+"}^{"+tmp3_2+"}";
        );
        tmp=tmp+"("+tmp3_(length(tmp3)-1)+")\,";
        tmp3=tmp3_(length(tmp3));
        if(substring(tmp3,0,1)!="d",tmp3="d"+tmp3);
        tmp=tmp+tmp3;
      );
      if(sym=="sum(",
        tmp="\sum_{"+tmp3_1+"}^{";
        tmp=tmp+tmp3_2+"}("+tmp3_3+")";
      );
      if(sym=="over(",
        tmp="\overline{"+tmp3_1+"}";
      );
      out=out+tmp1+tmp;
      tmp=indexof(rest,sym);
      ctr=ctr+1;
    );
    out=out+rest;
  );
  symL=["mat(","det("];
  forall(symL,sym,
    tmp=indexof(out,sym);
    ctr=0;
    while((tmp>0)&(ctr<20),
      rest=substring(out,tmp-1,length(out));
      out=substring(out,0,tmp-1);
      tmp1=Bracket(rest,"()");
      tmp1=select(tmp1,#_2==-1);
      if(length(tmp1)>0,tmp1=tmp1_1_1,tmp1=length(rest));
      tmp2=substring(rest,0,tmp1);
      rest=substring(rest,tmp1,length(rest));
      eL=Extractvar(tmp2,";");
      tmp3=eL_3;
      forall(1..(length(tmp3)),np,
        tmp=tmp3_np;
        tmp1=Getlevel(tmp);
        tmp1=select(tmp1,#_2==0);
        tmp1=apply(tmp1,#_1);
        nc=length(tmp1)+1;
        forall(tmp1,
          tmp_#="&";
        );
        tmp3_np=tmp;
      );
      tmp2="\begin{array}{";
      forall(1..nc,tmp2=tmp2+"c");
      tmp2=tmp2+"}";
      forall(tmp3,tmp2=tmp2+#+"\\");
      tmp2=substring(tmp2,0,length(tmp2)-2);
      tmp2=tmp2+"\end{array}";
      if(sym=="mat(",
        tmp2="\left("+tmp2+"\right)";
      );
      if(sym=="det(",
        tmp2="\left|"+tmp2+"\right|";
      );
      out=out+tmp2+rest;
      tmp=indexof(out,sym);
      ctr=ctr+1;      
    );
  );
  out;
);

Setvar(str):=(
  regional(out,tmp,tmp1,tmp2,tmp3,tmp4);
  out=str;
  forall(1..(length(varedit)),
    if(length(varedit_#)>0,
      tmp=Strsplit(varedit_#,"=");
      tmp1=tmp_1;
      tmp2=tmp_2;
      if(length(tmp2)>0,
        if(rowno==1,
          tmp3=out;
          tmp=indexof(tmp3,tmp1);
          if(tmp>0,
            tmp4=substring(tmp3,0,tmp-1);
            tmp4=tmp4+tmp2;
            out=tmp4+substring(tmp3,tmp+1,length(tmp3));
            strcsr=out;
            stredit_1=out;
//            Text1.currenttext=stredit_1;//only ketjs
          );
        );
        if(rowno==2,
          tmp3=out;
          tmp=indexof(tmp3,tmp1);
          if(tmp>0,
            tmp4=substring(tmp3,0,tmp-1);
            tmp4=tmp4+tmp2;
            out=tmp4+substring(tmp3,tmp+1,length(tmp3));
            strcsr=out;
            stredit_2=out;
//            Text2.currenttext=stredit_2;//only ketjs
          );
        );
        if(rowno==3,
          tmp3=out;
          tmp=indexof(tmp3,tmp1);
          if(tmp>0,
            tmp4=substring(tmp3,0,tmp-1);
            tmp4=tmp4+tmp2;
            out=tmp4+substring(tmp3,tmp+1,length(tmp3));
            strcsr=out;
            stredit_3=out;
//            Text3.currenttext=stredit_3;//only ketjs
          );
        );
        if(rowno==4,
          tmp3=out;
          tmp=indexof(tmp3,tmp1);
          if(tmp>0,
            tmp4=substring(tmp3,0,tmp-1);
            tmp4=tmp4+tmp2;
            out=tmp4+substring(tmp3,tmp+1,length(tmp3));
            strcsr=out;
            stredit_4=out;
//            Text4.currenttext=stredit_4;//only ketjs
          );
        );
      );
    );
  );
  out;
);

Resetvar():=(
  regional(vstr1,vstr2,vstr3,vstr4);
  vstr1="aa=";
  vstr2="bb=";
  vstr3="yy=";
  vstr4="xx=";
  varedit=[vstr1,vstr2,vstr3,vst4];
//  Text6.currenttext=vstr1;//only ketjs on
//  Text7.currenttext=vstr2;
//  Text8.currenttext=vstr3;
//  Text9.currenttext=vstr4;//only ketjs off
);

Removebb(str):=(
  regional(ctr,out,tmp,tmp1,tmp2,tmp3);
  out=str;
  res="";
  tmp=indexof(out,")^(bb)");
  ctr=1;
  while((tmp>0)&(ctr<=10),
    tmp3=Bracket(out,"()");
    tmp1=select(tmp3,#_1==tmp);
    tmp1=tmp1_1;
    tmp2=select(tmp3,((#_1)<tmp1_1)&(#_2==-tmp1_2));
    tmp2=tmp2_(-1)_1;
    tmp1=tmp1_1;
    tmp=substring(out,0,tmp2-1);
    tmp=tmp+substring(out,tmp2,tmp1-1);
    out=tmp+substring(out,tmp1+5,length(out));
    tmp=indexof(out,")^(bb)");
    ctr=ctr+1;
  );
  out;
);

Delete():=(
  regional(tmp,tmp1,tmp2);
  if(varctr==0,
    tmp=stredit_(rowno);
    if(length(tmp)>0,
      if((cursor==-1)%(cursorflg==0),
        tmp=substring(tmp,0,length(tmp)-1);
        stredit_(rowno)=tmp;
        cursor=length(tmp);
      ,
        tmp1=substring(tmp,0,cursor-1);
        tmp2=substring(tmp,cursor,length(tmp));
        tmp=tmp1+tmp2;
        cursor=cursor-1;
      );
    );
//    if(rowno==1,Text1.currenttext=tmp);//only ketjs on
//    if(rowno==2,Text2.currenttext=tmp);
//    if(rowno==3,Text3.currenttext=tmp);
//    if(rowno==4,Text4.currenttext=tmp);//only ketjs off
  ,
    tmp=varedit_(varctr);
    tmp=substring(tmp,0,length(tmp)-1);
//    if(varctr==1,Text6.currenttext=tmp);//only ketjs on
//    if(varctr==2,Text7.currenttext=tmp);
//    if(varctr==3,Text8.currenttext=tmp);
//    if(varctr==4,Text9.currenttext=tmp);//only ketjs off
  );
);

Copy():=(
  if(rowno==1,clpbd=Text1.currenttext);
  if(rowno==2,clpbd=Text2.currenttext);
  if(rowno==3,clpbd=Text3.currenttext);
  if(rowno==4,clpbd=Text4.currenttext);
);

Paste():=(
  regional(tmp);
  if(rowno==1,tmp=Text1.currenttext);
  if(rowno==2,tmp=Text2.currenttext);
  if(rowno==3,tmp=Text3.currenttext);
  if(rowno==4,tmp=Text4.currenttext);
  if(cursor==-1,cursor=length(tmp));
  tmp1=substring(tmp,0,cursor);
  tmp2=substring(tmp,cursor,length(tmp));
  strcsr=tmp1+clpbd+tmp2;
  cursor=cursor+length(clpbd);
  if(rowno==1,Text1.currenttext=strcsr);
  if(rowno==2,Text2.currenttext=strcsr);
  if(rowno==3,Text3.currenttext=strcsr);
  if(rowno==4,Text4.currenttext=strcsr);
  pasteflg=0;
);
